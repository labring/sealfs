name: Continuous integration

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.yaml"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.yaml"

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: 1.62.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get install protobuf-compiler libfuse-dev libcapstone-dev -y
      - run: cargo build --all --verbose --release

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get install protobuf-compiler libfuse-dev libcapstone-dev -y
      - run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get install protobuf-compiler libfuse-dev libcapstone-dev -y
      - run: cargo test -p sealfs

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get install protobuf-compiler libfuse-dev libcapstone-dev -y
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings